language: java
sudo: false
jdk:
  - openjdk8
# Signing is not really required here. We keep it, since we get aware of issues earlier.
# In case we are outside the base repo signing is skipped since the encrypted variables
# are not availabe in this case. "noop" profile is just an empty profile, only available
# in order to avoid a warning from maven wrt non existing profile.
install:
  - |
    PROFILE=noop
    echo "[INFO]: TRAVIS_REPO_SLUG: ${TRAVIS_REPO_SLUG}"
    echo "[INFO]: TRAVIS_PULL_REQUEST_SLUG: ${TRAVIS_PULL_REQUEST_SLUG}"
    if [ ! -z "${TRAVIS_PULL_REQUEST_SLUG}" ]
    then
      if [ "${TRAVIS_REPO_SLUG}" == "SAP/devops-cm-client" ]
      then
        if [ "${TRAVIS_PULL_REQUEST_SLUG}" == "${TRAVIS_REPO_SLUG}" ]
        then
          echo "[INFO]: Configuring code signing."
          PROFILE=signing
        else
          echo "[INFO]: Pull request proposed from outside base repo. Not preparing code signing."
        fi
      else
        echo "[INFO]: Pull request proposed to other repo than base repo. Not preparing code signing."
      fi
    else
      echo "[INFO]: No pull request."
      if [ "${TRAVIS_REPO_SLUG}" == "SAP/devops-cm-client" ]
      then
        echo "[INFO]: Configuring code signing."
        PROFILE=signing
      else
        echo "[INFO]: No pull request and outside base repo. Not preparing code signing."
      fi
    fi

    echo "[INFO] Running with profile: ${PROFILE}"
    mvn --settings cfg/settings.xml -P ${PROFILE} clean verify
script: 
  - mkdir tmp/ 
  - export PROJECT_VERSION=`mvn -q -Dexec.executable="echo" -Dexec.args='${project.version}' --non-recursive exec:exec` 
  - tar -C tmp -xvf modules/dist.cli/target/dist.cli-${PROJECT_VERSION}.tar.gz 
  - tmp/bin/cmclient --version | grep -q "^${PROJECT_VERSION}" 
cache:
  directories:
  - $HOME/.m2
before_install:
  - |
    echo "[INFO]: TRAVIS_REPO_SLUG: ${TRAVIS_REPO_SLUG}"
    echo "[INFO]: TRAVIS_PULL_REQUEST_SLUG: ${TRAVIS_PULL_REQUEST_SLUG}"
    PREPARE_SIGNING=false
    if [ ! -z "${TRAVIS_PULL_REQUEST_SLUG}" ]
    then
      if [ "${TRAVIS_REPO_SLUG}" == "SAP/devops-cm-client" ]
      then
        echo "[INFO]: pull request."
        if [ "${TRAVIS_PULL_REQUEST_SLUG}" == "${TRAVIS_REPO_SLUG}" ]
        then
          PREPARE_SIGNING=true
          echo "[INFO]: Inside repo '${TRAVIS_REPO_SLUG}'. Prepare code signing."
        else
          echo "[INFO]: Pull request proposed from outside base repo. Not preparing code signing."
        fi
      else
        echo "[INFO]: Pull request proposed to other repo than base repo. Not preparing code signing."
      fi
    else
      echo "[INFO]: No pull request."
      if [ "${TRAVIS_REPO_SLUG}" == "SAP/devops-cm-client" ]; then
        PREPARE_SIGNING=true
        echo "[INFO]: Inside repo '${TRAVIS_REPO_SLUG}'. Prepare code signing."
      else
        echo "[INFO]: No pull request and outside base repo. Not preparing code signing."
      fi
    fi
    if [ "${PREPARE_SIGNING}" = "true" ]
    then
      echo "[INFO]: Prepare code signing"
      openssl aes-256-cbc -K $encrypted_12c8071d2874_key -iv $encrypted_12c8071d2874_iv -in cfg/codesigning.asc.enc -out cfg/codesigning.asc -d
      if [ "$?" == "0" ]
      then
        echo "[INFO]: decrypting private key succeeded. Importing ..."
        gpg --verbose --fast-import cfg/codesigning.asc
        if [ "$?" == "0" ]
        then
          echo "[INFO]: private key imported."
        else
          echo "[ERROR]: private key import failed."
          exit 1
        fi
      else
        echo "[ERROR]: decrypting private key failed."
        exit 1
      fi
    fi
deploy:
  - provider: script
    script: mvn clean deploy --settings cfg/settings.xml -P signing -DstagingProfileId=22fbc0443d9154
    on:
      branch: release
  - provider: script
    script: mvn clean deploy --settings cfg/settings.xml -P signing
    on:
      branch: master
      repo: SAP/devops-cm-client

env:
  global:
  - secure: "nHxFPejYlhtglcXnekn0o/66fuJQQSEeQZxdGwrPXP38XjTNeRs686UbNb8KDrCKPghlgLY5DlEPn+dSko3+rhFabcEh91T3J+3vmTRYHmSKwSHKkRr0/5uHos7AcU/YqYObZUSF1zr+ZSU+/R89HVEOfT1auRv9d2zHWFwvaGokWJgpaeLP6qee/7lIurKsg9yz1aa8Do2hXIb+oV2lRujE4qvR9tn9MRcfYP8vloGGUtnivcK2zDoMp0SxRupzc30vwu0R6YW7B1Kq2w8KZVhif9kTmTBy0CAcQ96AoJrv4n6q1BpFHGYhGGUaIEDF0+ZlngKXyVUYdOk1UPYP7z+qcTT2Ejfn5JwuG3bovZV1Y9w7F1bTFm3AkqyKvwSl6e/tQICt15k2ecj5i1WFHK17oMKW75V4i9/GONaKgwPcBrGVu1ueFjv+6Xm8UYIH/AsBp0epkywo7pf6iw+WcY/El7dm9FZtc8qBn0rfxvI+m1yEsQMLROFR4jzPFPduAxGcPKn8HE9CYFFAxi28ixcRKahQ3uDELjn8723pF/WLrgeqcAXcj0aFVlBznkViLLQDAzPWxJlqGuLRmtt0DbyoL4B/FDomFSaACtvfXrvFPlh2kxDhxqoDe+48mcvkkmbePPQSlcxwzZet+xjqfsMbhhlqE1vOTxgV4rkQVFs="
  - secure: "D1jrZqbGHuxAI/UqV9HFSyVLBX0RlPbykjLFnB6G58NF9eS0AHtdOojcDXmuLg8CeAYH/nLzVGaWfRo68fbjmZoTzcVMXYQhDG0aRdy16IUi2of9q0jOrA8W+aAoQIupT0cWC5hPq6+dgVyoOs3RRh0rN85vSzmfcFs5cworbZyuUrkY6VGn/6xk5O0iqSJwTuQEOgvJgAG4i/T9/sU0a0AZFhl4YTEEKRKu8LYLrKwMIwKXn3VZxOAJ6FPmsDYqfZV+FYtEa5Lh4/PR2Wnm782PsxDf+8J7LpDyL01v92tvAn74jgEK9EGXXEY7o/ca6kQ98/JeCAJk1Cmb3LLpML7wZr58O4cgTh3RlEQR1kM9sN4C2eD95qrBiCruWRwiHZmyGwR2tqdkqWU4A5ykNBgpnPLgKSLdQIZ9greakoTSFbGOzeHt3HcdLcgyw4iau5jwwFffwXXUTs572H8BToiobYpXT9lfofPnaJ7Cl7gFzGj3hLos67s8PGHfUswsTtRkojZh49joiWOvDKwiqXMxiEniHfbuCQoT/ZgVpjVK3fM08O2QHUJOPVZcRKl3xfsDek3Kvj8qRgFT1NTCKIMbl7DRw4qQ8ighNJRv21NBGBc+6MDEMw+7KjnB1uSrPzvh99Z5uHs+4VLpG6icFLwf5NNp8htszfE43iRf45I="
  - secure: bypTXEbBITqiXnoq+nWb43DHZn4s+IkYPa9e8TjO1pp7dPMMKeeGrMRh64btCWlcQkWGVoy5388JjyNoWdUEaW7QGomDFwC7z7KLAFOH9KwvpFFPSQ68Np4YQVleZQBYQINaXQaLHszeRyItio2aTZRvhgABAYQLd8ArG2mwr4+2DxR9P25PHZsqVlTnldi4NHwuq1MQhzkqz0pxOVbKgxBdoYt/s4wY6YXJlS57AASyrl3XH6nJY8O6syqXC1EqIsiL3QO+J37Wu9KWBVNh3jpLN8z4mcTx/uJGzaisWUV3CG1TshgtvV4ymhQyL0gdgIw9ohOyp1kEgXIigWOM/c6gbhyu+51gCwRHC23ebxTXpgUeB6Xz7HGbgTnR2Bgv//G5fFMNLlsDeJPYOpGawSbjZlbudlHp9xKlQN5DOA/DoNW1U2tbmsDBDQBUeWfurFZq1IF/hFEmQosRzuNrLnLp3nQxpUELG8CMdDJvIpCuKjNq0FGebVsXqPtCsRamaEKgQhgCwP9Qs7lOg31qBHk9u8PZ4+Bcg5Gx/8NWj8b5exXSoOyEV6E1nj+MYUbIALn2/MbQFJko32AesJiXBek5E1yTyLEbkXWwWIfUD+ZLLC1QZyKUnAlxyb/HvC3QBi7gsGPJ5Zza564/LogzRgmPpDKLHb9MGVLObn4al3Q=
  - secure: "g2cdf7jfpZ4vLGbsvLxYaqYCcN/h97QeoDLUgHDTBO0a9kmU2AT/7VWSh9jVfZEiDlBWRf9hx1nqijBbpyarYA/v+oNMRrWrQQREfbehJQq/XHnnq+qKxGNxZ6bixwoDglW7iZe2LgV4rg3J+cXpujCy5mmKS8RNg6/Z1On5A08yKKCRaXidYn+43t2G9ciBOfxwIj4JPcUT5XPNL/g8mcuktAestan8WV6jHdE1YpgpiQRMPFEMx04HE+fW/JivDroRaErHEgcbBuRn7KszIHd2Xh+PfbO7MuqAkrVG9ZXnirslxeLkHIOTT5BmJmVyv58ZBPLe0HecQvR0bcGztpu6sW1C5ifBXx+Qge74dnMy9VjlsmSscEDDaZO2m2hTDb/+qfmwgh1ZmTAHWKiSqYpavlR3qqNcev+iTfoSoPIOZK5wqyLR9IZJBPrz92GOr1mcvxWRYPvwPHfUWOI7lEF3oOMoJdF9d9SsZ1iwZE7zStkWX6RQTX5tLuGL4CoRaYjPl2pGHEK84XW5WBMEZc0pSVDcvrnorEK7CLXXDmummxzqHujkom9habBRW+44AdTcWTaasjqTIr++fYxV3RxRfWmJJYZJyJsW5pMRqmrlHr5KvYkuA3Y/5haKhD4cAFquipcbLM5aHwTGEEqzbGeh+X6wScSyMheHfdKwGqc="
